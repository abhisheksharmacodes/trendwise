"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/article/[slug]/page",{

/***/ "(app-pages-browser)/./src/components/ArticleContent.tsx":
/*!*******************************************!*\
  !*** ./src/components/ArticleContent.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nconst ArticleContent = (param)=>{\n    let { content, media } = param;\n    _s();\n    const [processedContent, setProcessedContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(content);\n    // Helper to trim first <h1> and first <img>\n    function trimHeadingAndCoverImage(html) {\n        // Remove the first <h1>...</h1>\n        html = html.replace(/<h1[^>]*>.*?<\\/h1>/i, '');\n        // Remove the first <img ...>\n        html = html.replace(/<img[^>]*>/i, '');\n        return html.trim();\n    }\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ArticleContent.useEffect\": ()=>{\n            if (!media) {\n                setProcessedContent(trimHeadingAndCoverImage(content));\n                return;\n            }\n            // Create a single replacement map to avoid infinite loops\n            const replacements = {};\n            // Prepare image replacements\n            if (media.images && media.images.length > 0) {\n                media.images.forEach({\n                    \"ArticleContent.useEffect\": (image, index)=>{\n                        const placeholders = [\n                            \"[IMAGE_\".concat(index, \"]\"),\n                            \"[IMG_\".concat(index, \"]\"),\n                            \"{{IMAGE_\".concat(index, \"}}\"),\n                            \"{{IMG_\".concat(index, \"}}\"),\n                            \"<!--IMAGE_\".concat(index, \"-->\"),\n                            \"<!--IMG_\".concat(index, \"-->\")\n                        ];\n                        const imageHTML = '\\n          <div class=\"my-6\">\\n            <img src=\"'.concat(image.url, '\" alt=\"').concat(image.alt || '', '\" class=\"w-full h-auto rounded-lg\" />\\n            ').concat(image.caption ? '<p class=\"text-sm text-gray-600 text-center mt-2\">'.concat(image.caption, \"</p>\") : '', \"\\n          </div>\\n        \");\n                        placeholders.forEach({\n                            \"ArticleContent.useEffect\": (placeholder)=>{\n                                replacements[placeholder] = imageHTML;\n                            }\n                        }[\"ArticleContent.useEffect\"]);\n                    }\n                }[\"ArticleContent.useEffect\"]);\n            }\n            // Prepare video replacements\n            if (media.videos && media.videos.length > 0) {\n                media.videos.forEach({\n                    \"ArticleContent.useEffect\": (video, index)=>{\n                        const placeholders = [\n                            \"[VIDEO_\".concat(index, \"]\"),\n                            \"{{VIDEO_\".concat(index, \"}}\"),\n                            \"<!--VIDEO_\".concat(index, \"-->\")\n                        ];\n                        let videoHTML = '';\n                        if (video.platform === 'youtube') {\n                            const videoId = extractYouTubeId(video.url);\n                            if (videoId) {\n                                videoHTML = '\\n              <div class=\"my-6\">\\n                <div class=\"relative w-full h-0 pb-[56.25%]\">\\n                  <iframe \\n                    src=\"https://www.youtube.com/embed/'.concat(videoId, '\" \\n                    class=\"absolute top-0 left-0 w-full h-full rounded-lg\"\\n                    frameborder=\"0\" \\n                    allowfullscreen>\\n                  </iframe>\\n                </div>\\n                ').concat(video.title ? '<p class=\"text-sm font-medium text-gray-900 mt-2\">'.concat(video.title, \"</p>\") : '', \"\\n              </div>\\n            \");\n                            }\n                        } else if (video.platform === 'vimeo') {\n                            const videoId = extractVimeoId(video.url);\n                            if (videoId) {\n                                videoHTML = '\\n              <div class=\"my-6\">\\n                <div class=\"relative w-full h-0 pb-[56.25%]\">\\n                  <iframe \\n                    src=\"https://player.vimeo.com/video/'.concat(videoId, '\" \\n                    class=\"absolute top-0 left-0 w-full h-full rounded-lg\"\\n                    frameborder=\"0\" \\n                    allowfullscreen>\\n                  </iframe>\\n                </div>\\n                ').concat(video.title ? '<p class=\"text-sm font-medium text-gray-900 mt-2\">'.concat(video.title, \"</p>\") : '', \"\\n              </div>\\n            \");\n                            }\n                        } else {\n                            videoHTML = '\\n            <div class=\"my-6\">\\n              <video controls class=\"w-full rounded-lg\">\\n                <source src=\"'.concat(video.url, '\" type=\"video/mp4\">\\n                Your browser does not support the video tag.\\n              </video>\\n              ').concat(video.title ? '<p class=\"text-sm font-medium text-gray-900 mt-2\">'.concat(video.title, \"</p>\") : '', \"\\n            </div>\\n          \");\n                        }\n                        placeholders.forEach({\n                            \"ArticleContent.useEffect\": (placeholder)=>{\n                                replacements[placeholder] = videoHTML;\n                            }\n                        }[\"ArticleContent.useEffect\"]);\n                    }\n                }[\"ArticleContent.useEffect\"]);\n            }\n            // Prepare tweet replacements\n            if (media.tweets && media.tweets.length > 0) {\n                media.tweets.forEach({\n                    \"ArticleContent.useEffect\": (tweet, index)=>{\n                        const placeholders = [\n                            \"[TWEET_\".concat(index, \"]\"),\n                            \"{{TWEET_\".concat(index, \"}}\"),\n                            \"<!--TWEET_\".concat(index, \"-->\")\n                        ];\n                        const tweetHTML = '\\n          <div class=\"bg-gray-50 border border-gray-200 rounded-lg p-4 my-6\">\\n            <div class=\"flex items-start space-x-3\">\\n              <div class=\"flex-shrink-0\">\\n                <div class=\"w-12 h-12 bg-blue-400 rounded-full flex items-center justify-center\">\\n                  <svg class=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\\n                    <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\\n                  </svg>\\n                </div>\\n              </div>\\n              <div class=\"flex-1 min-w-0\">\\n                <p class=\"text-sm font-medium text-gray-900\">'.concat(tweet.author || 'Twitter User', '</p>\\n                <p class=\"text-sm text-gray-700 mt-1\">').concat(tweet.content || '', '</p>\\n                <a href=\"').concat(tweet.url, '\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-blue-500 text-sm hover:underline mt-2 inline-block\">\\n                  View on Twitter â†’\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        ');\n                        placeholders.forEach({\n                            \"ArticleContent.useEffect\": (placeholder)=>{\n                                replacements[placeholder] = tweetHTML;\n                            }\n                        }[\"ArticleContent.useEffect\"]);\n                    }\n                }[\"ArticleContent.useEffect\"]);\n            }\n            // Perform all replacements in a single pass\n            let result = trimHeadingAndCoverImage(content);\n            Object.entries(replacements).forEach({\n                \"ArticleContent.useEffect\": (param)=>{\n                    let [placeholder, replacement] = param;\n                    // Escape special regex characters in the placeholder\n                    const escapedPlaceholder = placeholder.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n                    const regex = new RegExp(escapedPlaceholder, 'g');\n                    result = result.replace(regex, replacement);\n                }\n            }[\"ArticleContent.useEffect\"]);\n            setProcessedContent(result);\n        }\n    }[\"ArticleContent.useEffect\"], [\n        content,\n        media\n    ]);\n    // Helper functions to extract video IDs\n    const extractYouTubeId = (url)=>{\n        const match = url.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/);\n        return match ? match[1] : null;\n    };\n    const extractVimeoId = (url)=>{\n        const match = url.match(/vimeo\\.com\\/(?:video\\/)?(\\d+)/);\n        return match ? match[1] : null;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"prose prose-lg max-w-none mb-8\",\n        dangerouslySetInnerHTML: {\n            __html: processedContent\n        }\n    }, void 0, false, {\n        fileName: \"D:\\\\Projects\\\\_Assignments\\\\trendwise\\\\front\\\\src\\\\components\\\\ArticleContent.tsx\",\n        lineNumber: 183,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ArticleContent, \"YGH0M0iMc1sP8kKz6cdBTPMFLa8=\");\n_c = ArticleContent;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ArticleContent);\nvar _c;\n$RefreshReg$(_c, \"ArticleContent\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ArticleContent.tsx\n"));

/***/ })

});